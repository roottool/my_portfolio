{
  "name": "Portfolio",
  "build": {
    "dockerfile": "Dockerfile",
    "args": {
      "USERNAME": "vscode",
      "VARIANT": "bullseye"
    }
  },
  "runArgs": ["--init", "--name=portfolio"],
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",
    "source=portfolio-node_modules,target=${containerWorkspaceFolder}/node_modules,type=volume",
    "source=portfolio-vscode_extensions,target=/home/node/.vscode-server/extensions,type=volume",
    "source=portfolio-zsh_history,target=/home/node/commandhistory,type=volume"
  ],
  "features": {
    "docker-from-docker": "latest",
    "git": "latest",
    "node": "lts"
  },
  "settings": {
    "terminal.integrated.defaultProfile.linux": "zsh",
    "files.watcherExclude": {
      "**/node_modules/**": true
    },
    // * For Linter and Formatter
    "editor.codeActionsOnSave": ["source.addMissingImports", "source.removeUnusedImports", "source.fixAll.eslint"],
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.formatOnType": true,
    "editor.formatOnSaveMode": "modifications",
    "editor.tabSize": 2,
    "eslint.packageManager": "yarn",
    "files.trimFinalNewlines": true,
    "files.trimTrailingWhitespace": true,
    "javascript.preferences.importModuleSpecifierEnding": "minimal",
    "typescript.preferences.importModuleSpecifierEnding": "minimal",
    "[javascript|typescript|typescriptreact|json|markdown]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[markdown]": {
      "files.trimTrailingWhitespace": false,
      "editor.wordWrap": "on",
      "editor.quickSuggestions": false
    }
  },
  "extensions": [
    // * Docker
    "ms-azuretools.vscode-docker",
    // * EditorConfig
    "editorconfig.editorconfig",
    // * JavaScript, TypeScript
    "dbaeumer.vscode-eslint",
    "esbenp.prettier-vscode"
  ],
  // * Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [3000],
  // * Use `include` in a local `.gitconfig` for the personal secret information.
  "initializeCommand": "cd \"${localWorkspaceFolder}\" && git config --local user.email \"$(git config user.email)\" && git config --local user.name \"$(git config user.name)\" && git config --local user.signingkey \"$(git config user.signingkey)\"",
  // * Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "sudo chown -R vscode:vscode node_modules",
  // * Comment out connect as root instead.
  // * More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode"
}
