name: CI
run-name: '${{ github.workflow }} (${{ github.ref_name }}): ${{ github.event.pull_request.title }}'
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

# Declare default permissions as read only.
permissions: read-all

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ !github.event.pull_request.draft }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Initialize
        uses: ./.github/actions/setup-bun

  paths:
    name: Check diff targets by path filters
    runs-on: ubuntu-latest
    timeout-minutes: 3
    permissions:
      pull-requests: read
    outputs:
      renovate-config: ${{ steps.filter.outputs.renovate-config }}
    if: ${{ !github.event.pull_request.draft }}
    steps:
      - name: Set filters output
        uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
        id: filter
        with:
          filters: |
            renovate-config:
              - '.github/renovate.json'

  renovate-config-lint:
    name: Renovate config lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [setup, paths]
    if: ${{ needs.paths.outputs.renovate-config == 'true' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          sparse-checkout: |
            .github/actions/setup-bun/action.yml
            .github/renovate.json
            package.json
            pnpm-lock.yaml
            prettier.config.mjs
          sparse-checkout-cone-mode: false
      - name: Initialize
        uses: ./.github/actions/setup-bun
      - name: Check format by Prettier
        run: bunx prettier --check .github/renovate.json
      - name: Validate Renovate config
        run: bunx --package renovate --strict -c 'renovate-config-validator'

  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 3
    needs: [setup]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Initialize
        uses: ./.github/actions/setup-bun
      - name: Run format check
        run: bun run lint:prettier
      - name: Run lint
        run: bun run lint:eslint

  typecheck:
    name: Type check
    runs-on: ubuntu-latest
    timeout-minutes: 3
    needs: [setup]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Initialize
        uses: ./.github/actions/setup-bun
      - name: Run type check
        run: bun run typecheck

  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [lint, typecheck]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Initialize
        uses: ./.github/actions/setup-bun
      - name: Run test
        run: bun run test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
